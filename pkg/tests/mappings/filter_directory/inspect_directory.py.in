#!/usr/bin/env python3

# Copyright 2021 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import glob
import os
import unittest
from rules_python.python.runfiles import runfiles

DIRECTORY_ROOT = "%DIRECTORY_ROOT%"
EXPECTED_STRUCTURE = %EXPECTED_STRUCTURE%


class DirectoryStructureTest(unittest.TestCase):
    def setUp(self):
        self.runfiles = runfiles.Create()

    def test_directory_structure_matches_global(self):
        #print("PROVIDED " + DIRECTORY_ROOT)

        #print("EXPECTED " "rules_pkg/tests/mappings/filter_directory/")
        #print(EXPECTED_STRUCTURE)
        real_directory_root = self.runfiles.Rlocation(os.path.join(os.environ["TEST_WORKSPACE"], DIRECTORY_ROOT))

        print("cwd", os.getcwd())
        print("glob start")
        for p in glob.glob(os.path.join(real_directory_root, "**"), recursive=True):
            print(p)
            print(os.path.relpath(p, real_directory_root))
            
        print("glob end")

if __name__ == "__main__":
    unittest.main()
